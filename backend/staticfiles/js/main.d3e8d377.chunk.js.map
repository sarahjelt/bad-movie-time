{"version":3,"sources":["components/Modal.js","utils/API.js","components/Search.js","components/Nav.js","components/LoginForm.js","components/SignUpForm.js","App.js","serviceWorker.js","index.js"],"names":["CustomModal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","_e$target","target","name","value","type","checked","activeItem","objectSpread","state","defineProperty","setState","_this2","_this$props","toggle","onSave","react_default","a","createElement","Modal","isOpen","ModalHeader","ModalBody","Form","FormGroup","Input","title","onChange","placeholder","Label","for","description","check","completed","ModalFooter","onClick","Component","API","searchByQuery","query","fetch","concat","then","res","json","Search","searchValue","formActionDeterminer","event","preventDefault","parseResultsFromAPICall","clearForm","results","savedResults","forEach","mediaItem","mediaItemObj","id","undefined","overview","poster","poster_path","user_shelf","ID","push","UN","className","map","result","key","src","width","alt","Nav","logged_out_nav","displayed_form","logged_in_nav","handle_logout","logged_in","LoginForm","username","password","handle_change","prevstate","newState","onSubmit","handle_login","htmlFor","React","SignupForm","handle_signup","App","handleLogin","data","method","headers","Content-Type","body","JSON","stringify","localStorage","setItem","token","user","userid","handleSignup","handleLogout","removeItem","displayForm","form","refreshList","axios","get","movies","catch","err","console","log","renderItems","seen","filter","item","includes","slice","reverse","viewCompleted","editItem","handleDelete","modal","handleSubmit","put","Authorization","getItem","post","handleSearchSubmit","delete","createItem","onSearch","movieTitle","nextMovieState","movie","prevState","_this3","components_LoginForm","SignUpForm","components_Nav","Search_Search","Modal_CustomModal","href","rel","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d3e8d377.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  // Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from 'reactstrap';\n\nexport default class CustomModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: this.props.activeItem\n    };\n  }\n\n  handleChange = e => {\n    let { name, value } = e.target;\n    if (e.target.type === 'checkbox') {\n      value = e.target.checked;\n    }\n    const activeItem = { ...this.state.activeItem, [name]: value };\n    this.setState({ activeItem });\n  };\n\n  render() {\n    const { toggle, onSave } = this.props;\n    return (\n      <Modal isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Movie Item</ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Input\n                type=\"text\"\n                name=\"title\"\n                value={this.state.activeItem.title}\n                onChange={this.handleChange}\n                placeholder=\"Enter Movie Title\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"description\">Description</Label>\n              <Input\n                type=\"textarea\"\n                name=\"description\"\n                value={this.state.activeItem.description}\n                onChange={this.handleChange}\n                placeholder=\"Enter Movie description\"\n              />\n            </FormGroup>\n            <FormGroup check>\n              <Label for=\"completed\">\n                <Input\n                  type=\"checkbox\"\n                  name=\"completed\"\n                  checked={this.state.activeItem.completed}\n                  onChange={this.handleChange}\n                />\n                Completed\n              </Label>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <button onClick={() => onSave(this.state.activeItem)}>\n            Save\n          </button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}","// import axios from 'axios';\n\nexport default {\n  searchByQuery: function(query) {\n    return fetch(`\n      https://api.themoviedb.org/3/search/movie?api_key=6df7d06e1b9b586ab617bf9997934aaa&query=${query}&include_adult=false`)\n    .then(res => res.json())\n  }\n}","import React, { Component } from 'react';\nimport API from '../utils/API';\n\nexport default class Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchValue: '',\n      results: this.props.results,\n      ID: this.props.ID,\n      UN: this.props.UN\n    };\n  }\n\n  handleChange = e => {\n    this.setState({ searchValue: e.target.value });\n  };\n\n  formActionDeterminer = event => {\n    event.preventDefault();\n\n    API.searchByQuery(this.state.searchValue)\n      .then(res => {\n          this.parseResultsFromAPICall(res)\n      });\n  }\n\n  clearForm = event => {\n    event.preventDefault();\n    this.setState({searchValue: \"\", results: null})\n  }\n\n  parseResultsFromAPICall = (res) => {\n    let results = res.results;\n    // console.log(results);\n    let savedResults = [];\n\n    results.forEach(mediaItem => {\n      let mediaItemObj = {\n          id: mediaItem.id,\n          title: mediaItem.name !== undefined ? mediaItem.name : mediaItem.title,\n          description: mediaItem.overview,\n          poster: mediaItem.poster_path ? (\"https://image.tmdb.org/t/p/w500\" + mediaItem.poster_path) : \"/img-placeholder.png\",\n          completed: false,\n          user_shelf: [this.props.ID]\n        }\n\n        savedResults.push(mediaItemObj);\n      })\n\n    this.setState({\n      results: savedResults\n    })\n  }\n\n  render() {\n    const { onSave } = this.props;\n    return (\n      <div className=\"inner-search-comp\">\n        <form>\n          <input\n              placeholder='Search...'\n              id='Search'\n              type='text'\n              value={this.state.searchValue}\n              onChange={(event) => this.handleChange(event)}\n          />\n          <button\n            type=\"submit\"\n            onClick={this.formActionDeterminer}>\n            Search\n          </button>\n          <button\n            className=\"clear-search\"\n            onClick={this.clearForm}\n          >\n            Clear Search\n          </button>\n        </form>\n        {this.state.results ? (\n          this.state.results.map(result => (\n            <div key={result.id}>\n              <h4>{result.title}</h4>\n              <p>{result.description}</p>\n              <div className=\"search-res-poster\">\n                <img src={result.poster} width=\"100\" alt={result.title + \" poster\"} />\n                <button onClick={() => onSave(result)}>\n                  Save\n                </button>\n              </div>\n            </div>\n          ))\n        ) : null }\n      </div>\n    );\n  }\n\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Nav(props) {\n  const logged_out_nav = (\n    <ul className=\"nav\">\n      <li onClick={() => props.displayed_form('login')}>login</li>\n      <li onClick={() => props.displayed_form('signup')}>signup</li>\n    </ul>\n  );\n\n  const logged_in_nav = (\n    <ul className=\"nav\">\n      <li onClick={props.handle_logout}>logout</li>\n    </ul>\n  );\n  return (\n    <div className=\"header\">\n      <div>\n        {props.logged_in ? logged_in_nav : logged_out_nav}\n      </div>\n      <div>\n        <h1 className=\"text-white text-center my-4\">BAD MOVIE TIME</h1>\n      </div>\n    </div>\n  )\n}\n\nexport default Nav;\n\nNav.propTypes = {\n  logged_in: PropTypes.bool.isRequired,\n  displayed_form: PropTypes.func.isRequired,\n  handle_logout: PropTypes.func.isRequired\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass LoginForm extends React.Component {\n  state = {\n    username: '',\n    password: ''\n  };\n\n  handle_change = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState(prevstate => {\n      const newState = { ...prevstate };\n      newState[name] = value;\n      return newState;\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={e => this.props.handle_login(e, this.state)}>\n        <h4>Log In</h4>\n        <label htmlFor=\"username\">Username</label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={this.state.username}\n          onChange={this.handle_change}\n        />\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={this.state.password}\n          onChange={this.handle_change}\n        />\n        <input type=\"submit\" />\n      </form>\n    );\n  }\n}\n\nexport default LoginForm;\n\nLoginForm.propTypes = {\n  handle_login: PropTypes.func.isRequired\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass SignupForm extends React.Component {\n  state = {\n    username: '',\n    password: ''\n  };\n\n  handle_change = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState(prevstate => {\n      const newState = { ...prevstate };\n      newState[name] = value;\n      return newState;\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={e => this.props.handle_signup(e, this.state)}>\n        <h4>Sign Up</h4>\n        <label htmlFor=\"username\">Username</label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={this.state.username}\n          onChange={this.handle_change}\n        />\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={this.state.password}\n          onChange={this.handle_change}\n        />\n        <input type=\"submit\" />\n      </form>\n    );\n  }\n}\n\nexport default SignupForm;\n\nSignupForm.propTypes = {\n  handle_signup: PropTypes.func.isRequired\n};","import React, { Component } from \"react\";\nimport Modal from \"./components/Modal\";\nimport Search from './components/Search';\nimport axios from \"axios\";\nimport Nav from './components/Nav';\nimport LoginForm from './components/LoginForm';\nimport SignUpForm from './components/SignUpForm';\n// import { } from './actions';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewCompleted: false,\n      activeItem: {\n        title: \"\",\n        description: \"\",\n        completed: false,\n        poster: \"\",\n        user_shelf: []\n      },\n      movies: [],\n      displayed_form: '',\n      logged_in: localStorage.getItem('token') ? true : false,\n      username: '',\n      userid: 0,\n    };\n  }\n  componentWillMount() {\n    if (this.state.logged_in) {\n      fetch('http://localhost:8000/badmovietime/current_user', {\n        headers: {\n          Authorization: `Token ${localStorage.getItem('token')}`\n        }\n      })\n        .then(res => res.json())\n        .then(json => {\n          this.setState({ userid: json.id })\n          // console.log(`will mount ${this.state.userid}`);\n        })\n    }\n  }\n  componentDidMount() {\n    if (this.state.logged_in) {\n      fetch('http://localhost:8000/badmovietime/current_user', {\n        headers: {\n          Authorization: `Token ${localStorage.getItem('token')}`\n        }\n      })\n        .then(res => res.json())\n        .then(json => {\n          // console.log(json.username, json.id);\n          this.setState({ username: json.username });\n          this.refreshList();\n          // console.log(`did mount ${this.state.userid}`);\n        });\n    } else {\n      this.refreshList();\n      // console.log(this.state.userid);\n    }\n  }\n\n  handleLogin = (e, data) => {\n    e.preventDefault();\n    fetch('http://localhost:8000/token-auth/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(json => {\n        localStorage.setItem('token', json.token);\n        this.setState({\n          logged_in: true,\n          displayed_form: '',\n          username: json.user.username,\n          userid: json.user.id,\n        });\n      });\n  }\n\n  handleSignup = (e, data) => {\n    e.preventDefault();\n    fetch('http://localhost:8000/badmovietime/users/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(json => {\n        localStorage.setItem('token', json.token);\n        this.setState({\n          logged_in: true,\n          displayed_form: '',\n          username: json.username,\n          userid: json.id,\n        });\n      });\n  };\n\n  handleLogout = () => {\n    localStorage.removeItem('token');\n    this.setState({ logged_in: false, username: '', userid: 0 });\n  };\n\n  displayForm = form => {\n    this.setState({\n      displayed_form: form\n    });\n  };\n\n  refreshList = () => {\n    // console.log('problem?', this.state.username, this.state.userid, this.state.logged_in)\n    axios\n      .get(\"/api/movies/\")\n      .then(res => this.setState({ movies: res.data }))\n      .catch(err => console.log(err));\n  };\n  renderItems = (seen) => {\n    let newItems;\n\n    if (seen) {\n      newItems = this.state.movies.filter(\n      item => item.completed === true && item.user_shelf.includes(this.state.userid)\n    )} else {\n      newItems = this.state.movies.filter(\n      item => item.completed === false && item.user_shelf.includes(this.state.userid)\n    )}\n\n    return newItems.slice().reverse().map(item => (\n      <li\n        key={item.id}\n        className=\"list-group-item d-flex justify-content-between align-items-center\"\n      >\n        <div className=\"movie-title\">\n          <span\n            className={`movie-title mr-2 ${\n              this.state.viewCompleted ? \"completed-movie\" : \"\"\n            }`}\n            title={item.description}\n          >\n            {item.title}\n          </span>\n        </div>\n        <div className=\"movie-image\">\n          <img src={item.poster} width=\"100\" alt={item.title + \" poster\"} />\n        </div>\n        <div className=\"buttonz\">\n          <span>\n            <button onClick={() => this.editItem(item)} >\n              {\" \"}\n              Edit{\" \"}\n            </button>\n            <button className=\"delete-btn\" onClick={() => this.handleDelete(item)} >\n              Delete{\" \"}\n            </button>\n          </span>\n        </div>\n      </li>\n      )\n    )\n  };\n\n  toggle = () => {\n    this.setState({ modal: !this.state.modal });\n  };\n\n  handleSubmit = item => {\n    // console.log('problem? 3', this.state.username, this.state.userid, this.state.logged_in)\n    this.toggle();\n    if (item.id) {\n      axios\n        .put(`http://localhost:8000/api/movies/${item.id}/`, item, {headers: {\n          Authorization: `Token ${localStorage.getItem('token')}`\n        }})\n        .then(res => this.refreshList());\n      return;\n    }\n    axios\n      .post(\"http://localhost:8000/api/movies/\", item, {headers: {\n          Authorization: `Token ${localStorage.getItem('token')}`\n        }})\n      .then(res => this.refreshList());\n  };\n  handleSearchSubmit = item => {\n    // console.log('problem? 4', item)\n    axios\n      .post(\"http://localhost:8000/api/movies/\", item, {headers: {\n          Authorization: `Token ${localStorage.getItem('token')}`\n        }})\n      .then(res => this.refreshList());\n      console.log(this.state.userid);\n  };\n  handleDelete = item => {\n    // console.log('problem? 4.5')\n    axios\n      .delete(`http://localhost:8000/api/movies/${item.id}`, {headers: {\n          Authorization: `Token ${localStorage.getItem('token')}`\n        }})\n      .then(res => this.refreshList());\n  };\n  createItem = () => {\n    // console.log('problem? 5', this.state.username, this.state.userid, this.state.logged_in)\n    fetch('http://localhost:8000/badmovietime/current_user', {\n        headers: {\n          Authorization: `Token ${localStorage.getItem('token')}`\n        }\n      })\n        .then(res => res.json())\n        .then(json => {\n          const item = { title: \"\", description: \"\", completed: false, user_shelf: this.state.userid };\n          //console.log(json.username, json.id);\n          this.setState({ activeItem: item, modal: !this.state.modal })\n        });\n  };\n  editItem = item => {\n    // console.log('problem? 6', this.state.username, this.state.userid, this.state.logged_in)\n    this.setState({ activeItem: item, modal: !this.state.modal });\n  };\n  onSearch = movieTitle => {\n    // console.log('problem? 7', this.state.username, this.state.userid, this.state.logged_in)\n    const { movies } = this.state;\n    const nextMovieState = movies.map(movie => {\n      if (movie.title !== movieTitle) return movie;\n      return {\n        ...movie,\n      };\n    });\n    this.setState(prevState => ({ movies: nextMovieState }));\n  };\n  render() {\n    let form;\n    switch (this.state.displayed_form) {\n      case 'login':\n        form = <LoginForm handle_login={this.handleLogin} />;\n        break;\n      case 'signup':\n        form = <SignUpForm handle_signup={this.handleSignup} />;\n        break;\n      default:\n        form = null;\n    }\n    return (\n      <main className=\"content\">\n      <div className=\"everything-but-footer\">\n        <Nav\n          logged_in={this.state.logged_in}\n          displayed_form={this.displayForm}\n          handle_logout={this.handleLogout}\n        />\n        { form }\n        <h3>\n          {this.state.logged_in\n            ? `Hello, ${this.state.username}!`\n            : `Please log in`\n          }\n        </h3>\n        { this.state.logged_in ? (\n        <div className=\"flex-card-row\">\n          <div className=\"flex-card seen\">\n            <div className=\"card p-3\">\n              <h2>Seen</h2>\n              <ul className=\"list-group list-group-flush\">\n                {this.renderItems(true)}\n              </ul>\n            </div>\n          </div>\n          <div className=\"flex-card search\">\n            <div className=\"card p-3\">\n              {/*<div className=\"\">\n                <button onClick={this.createItem}>\n                  Add Movie\n                </button>\n              </div>*/}\n              <div className=\"search-comp\">\n                <Search\n                  results={this.results}\n                  onSearch={this.onSearch}\n                  onSave={this.handleSearchSubmit}\n                  ID={this.state.userid}\n                  UN={this.state.username}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"flex-card to-see\">\n            <div className=\"card p-3\">\n              <h2>To See</h2>\n              <ul className=\"list-group list-group-flush\">\n                {this.renderItems(false)}\n              </ul>\n            </div>\n          </div>\n        </div>\n        ) : null}\n        {this.state.modal ? (\n          <Modal\n            activeItem={this.state.activeItem}\n            toggle={this.toggle}\n            onSave={this.handleSubmit}\n          />\n        ) : null}\n        </div>\n        <footer>\n          <h6>Powered by <a href=\"https://themoviedb.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          The Movie Database</a></h6>\n        </footer>\n      </main>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}